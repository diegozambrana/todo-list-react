{"version":3,"sources":["components/icons/arrows.js","components/Task/task.js","App.js","reportWebVitals.js","index.js"],"names":["Arrow","direction","pointer","onClickArrow","className","onClick","Task","item","React","useState","showSteps","setShowSteps","style","marginRight","show","name","type","checked","completed","DATA","steps","App","map","task","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAGaA,EAAQ,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,aAAtB,OACjB,qBACIC,UAAS,gBACS,OAAdH,EAAqB,WAAa,aAD7B,YAELC,EAAU,UAAY,IAC1BG,QAAS,kBAAMF,EAAeA,IAAiB,SCJjDG,EAAO,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EACWC,IAAMC,UAAS,GAD1B,mBAChBC,EADgB,KACLC,EADK,KAGvB,OACE,qBAAKP,UAAU,OAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKQ,MAAO,CAACC,YAAa,IAA1B,SACE,cAAC,EAAD,CACEZ,UAAWS,EAAY,KAAO,OAC9BR,SAAO,EACPC,aAAc,WACZQ,GAAa,SAACG,GAAD,OAAUH,GAAcG,WAI3C,mBAAGV,UAAU,YAAb,SAA0BG,EAAKQ,OAC/B,qBAAKX,UAAU,aAAf,SACE,uBAAOY,KAAK,WAAWC,QAASV,EAAKW,oBCjBzCC,EAAO,CACX,CAACJ,KAAM,UAAWG,WAAW,EAAME,MAAO,IAC1C,CAACL,KAAM,UAAWG,WAAW,EAAOE,MAAO,CAAC,CAACL,KAAM,SAAUG,WAAW,KACxE,CAACH,KAAM,UAAWG,WAAW,EAAOE,MAAO,CAAC,CAACL,KAAM,SAAUG,WAAW,GAAQ,CAACH,KAAM,SAAUG,WAAW,MAc/FG,MAXf,WACE,OACE,qBAAKjB,UAAU,gBAAf,SACE,2EAEGe,EAAKG,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAMhB,KAAMgB,aCHzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f1dbad7f.chunk.js","sourcesContent":["import React from 'react';\nimport './arrows.css';\n\nexport const Arrow = ({direction, pointer, onClickArrow}) => (\n    <div\n        className={`arrow ${\n            direction === 'up' ? 'arrow-up' : 'arrow-down'\n        } ${pointer ? 'pointer' : ''}`}\n        onClick={() => onClickArrow ? onClickArrow() : null}\n    />\n)","import React from 'react';\nimport './task.css';\nimport {Arrow} from '../icons/arrows';\n\nconst Task = ({item}) => {\n  const [showSteps, setShowSteps] = React.useState(false);\n\n  return (\n    <div className=\"task\">\n      <div className=\"task-container\">\n        <div style={{marginRight: 16}}>\n          <Arrow\n            direction={showSteps ? 'up' : 'down'}\n            pointer\n            onClickArrow={() => {\n              setShowSteps((show) => setShowSteps(!show));\n            }}\n          />\n        </div>\n        <p className=\"task-text\">{item.name}</p>\n        <div className=\"task-check\">\n          <input type=\"checkbox\" checked={item.completed}/>\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport { Task };","import React from 'react';\nimport './App.css';\nimport { Task } from './components/Task/task';\n\nconst DATA = [\n  {name: 'Tarea 1', completed: true, steps: []},\n  {name: 'Tarea 2', completed: false, steps: [{name: 'step 1', completed: false}]},\n  {name: 'Tarea 3', completed: false, steps: [{name: 'step 1', completed: false}, {name: 'step 2', completed: false}]}\n]\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <div>\n        Hola  esta es la primera APP, como esta?\n        {DATA.map((task) => <Task item={task}/>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}