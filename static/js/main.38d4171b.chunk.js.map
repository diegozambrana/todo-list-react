{"version":3,"sources":["components/icons/arrows.js","components/TextBlock/TextBlock.js","components/Text/Text.js","components/Form/Input.js","components/Button/Button.js","context/TodoContext.js","hooks/useLocalStorage.js","components/EditText/index.js","modules/ToDo/components/Step/Step.js","utils/index.js","modules/ToDo/components/Task/Task.js","components/Form/TextArea.js","modules/ToDo/components/AddTask/AddTask.js","components/Modal/Modal.js","modules/ToDo/index.js","App.js","reportWebVitals.js","index.js"],"names":["Arrow","direction","pointer","onClickArrow","className","onClick","TextBlock","text","Text","type","gray","center","fontWeight","styles","editable","style","Input","value","onChange","placeholder","fullWidth","onEnterPressed","event","target","onKeyDown","key","Button","danger","props","AppContext","React","createContext","TodoContext","itemName","initialValue","useState","item","setItem","useEffect","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","useLocalStorage","todoData","setTodoData","isModalAddTaskOpen","setIsModalAddTaskOpen","searchText","setSearchText","filteredTodoData","useMemo","filter","task","name","includes","tasks","length","completed","tasksCompleted","Provider","addTask","removeTask","idTask","newTodoData","id","editTask","field","map","editStep","idStep","steps","step","onAddStep","newStep","push","removeStep","children","EditText","onComplete","editMode","setEditMode","editText","setEditText","onAccept","onCancel","e","autoFocus","onBlur","Step","memo","taskId","useContext","onUpdateStep","checked","uuid","dt","Date","getTime","replace","c","r","Math","random","floor","toString","Task","showSteps","setShowSteps","setNewStep","completedNumberSteps","addStep","data","marginRight","show","position","description","TextArea","rows","AddTask","onAddTask","setData","console","log","Modal","isOpen","onClose","ToDoList","renderTasks","marginTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38d4171b.chunk.js","sourcesContent":["import React from 'react';\nimport './arrows.css';\n\nexport const Arrow = ({direction, pointer, onClickArrow}) => (\n    <div\n        className={`arrow ${\n            direction === 'up' ? 'arrow-up' : 'arrow-down'\n        } ${pointer ? 'pointer' : ''}`}\n        onClick={() => onClickArrow ? onClickArrow() : null}\n    />\n)","import React from 'react';\nimport './TextBlock.css';\n\nexport const TextBlock = ({text}) => {\n    return (<p className='text-block'>{text}</p>)\n}","import React from 'react';\nimport './Text.css';\n\nexport const Text = ({text, type, gray, center, fontWeight, editable}) => {\n\n    let styles = {};\n\n    if(fontWeight) styles['fontWeight'] = fontWeight\n    if(gray) styles['color'] = 'gray'\n    if(center) styles['textAlign'] = 'center';\n\n    if(type === 'title'){\n        return (<h2 className='title'>{text}</h2>)\n    }\n    if(type === 'sub-title'){\n        return (<h3 className='sub-title'>{text}</h3>)\n    }\n    if(type === 'sub-sub-title'){\n        return (<h4 className='sub-sub-title'>{text}</h4>)\n    }\n    return (<p className='body-text' style={styles}>{text}</p>)\n}","import React from 'react';\nimport './Input.css'\n\nexport const Input = ({value, onChange, placeholder, fullWidth, onEnterPressed}) => {\n  const handleChange = (event) => {\n    if(onChange) onChange(event.target.value);\n  }\n\n\n  return (\n    <div className={`input-container ${fullWidth ? 'full-width' : ''}`}>\n      <input\n        className='input-text'\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={handleChange}\n        onKeyDown={(event) => (\n          event.key === 'Enter' && onEnterPressed && onEnterPressed()\n        )}\n      />\n    </div>  \n  )\n}","import React from 'react';\nimport './Button.css';\n\nexport const Button = ({value, danger,...props}) => {\n\n    return (\n        <button className={`button ${danger ? 'danger' : ''}`} {...props}>{value}</button>\n    )\n}","import React from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage';\n\nexport const AppContext = React.createContext();\n\n\nexport const TodoContext = (props) => {\n    const {item: todoData, saveItem: setTodoData} = useLocalStorage('TODO', []);\n    const [isModalAddTaskOpen, setIsModalAddTaskOpen] = React.useState(false);\n    const [searchText, setSearchText] = React.useState('');\n    const filteredTodoData = React.useMemo(() => {\n        if(searchText){\n            return todoData.filter(task => task.name.includes(searchText));\n        }\n        return todoData;\n    }, [searchText, todoData])\n\n    const tasks = React.useMemo(() => filteredTodoData.length > 0\n        ? filteredTodoData.filter(task => !task.completed)\n        : []\n    , [filteredTodoData])\n\n    const tasksCompleted = React.useMemo(() => filteredTodoData.length > 0\n        ? filteredTodoData.filter(task => task.completed)\n        : []\n    , [filteredTodoData])\n\n    const addTask = (task) => {\n        setTodoData([...todoData, task]);\n        setIsModalAddTaskOpen(false);\n    }\n\n    const removeTask = (idTask) => {\n        const newTodoData = todoData.filter((task => task.id !== idTask))\n        setTodoData(newTodoData);\n    }\n\n    const removeStep = (idTask, idStep) => {\n        const newTodoData = todoData.map(( task => task.id === idTask\n            ? {\n                ...task,\n                steps: task.steps.filter(step => step.id !== idStep)\n            }\n            : task))\n        setTodoData(newTodoData);\n    }\n\n    const editTask = (idTask, field, value) => {\n        const newTodoData = todoData.map(task => task.id === idTask\n            ? {... task, [field]: value}\n            : task\n        )\n        setTodoData(newTodoData);\n    }\n\n    const editStep = (idTask, idStep, field, value) => {\n        const newTodoData = todoData.map(task => task.id === idTask ? {\n                ... task,\n                steps: task.steps.map((step) => step.id === idStep\n                    ? {...step, [field]: value}\n                    : step\n                )\n            } : task\n        )\n        setTodoData(newTodoData);\n    }\n\n    const onAddStep = (idTask, newStep) => {\n        const newTodoData = todoData.map(task => {\n            if(task.id === idTask){\n                task.steps.push(newStep)\n                return task\n            }\n            return task\n        })\n        setTodoData(newTodoData);\n    }\n    return <AppContext.Provider value={{\n        tasks,\n        tasksCompleted,\n        todoData,\n        addTask,\n        removeTask,\n        editTask,\n        editStep,\n        onAddStep,\n        searchText,\n        setSearchText,\n        isModalAddTaskOpen,\n        setIsModalAddTaskOpen,\n        removeStep\n    }}>{props.children}</AppContext.Provider>\n}","import React from 'react';\n\nexport const useLocalStorage = (itemName, initialValue) => {\n    const [item, setItem] = React.useState(initialValue);\n\n    React.useEffect(() => {\n        const localStorageItem = localStorage.getItem(itemName);\n        if(!localStorageItem){\n            localStorage.setItem(itemName, JSON.stringify(initialValue))\n            setItem(initialValue);\n        }else{\n            setItem(JSON.parse(localStorageItem))\n        }\n    }, []);\n\n    const saveItem = (value) => {\n        localStorage.setItem(itemName, JSON.stringify(value));\n        setItem(value);\n    }\n\n    return {item, saveItem}\n}","import React from 'react';\nimport './EditText.css';\n\nexport const EditText = ({value, className, onComplete}) => {\n  const [editMode, setEditMode] = React.useState(false);\n  const [editText, setEditText] = React.useState(value);\n  \n  const onAccept = () => {\n    onComplete(editText);\n    setEditMode(false);\n  }\n\n  const onCancel = () => {\n    setEditText(value);\n    setEditMode(false);\n  }\n\n  const onKeyDown = (e) => {\n    if(e.key === \"Enter\") onAccept();\n    else if(e.key === \"Escape\") onCancel();\n  }\n\n  return (\n    <div className={`edit-text-wrapper ${className}`}>\n      {!editMode && (\n        <p\n          className=\"edit-text\"\n          onClick={() => setEditMode(!editMode)}\n        >{value}</p>\n      )}\n      {editMode && (\n        <div className=\"edit-text-input-wrapper\">\n          <input\n            className=\"edit-text-input\"\n            value={editText}\n            onChange={(e) => setEditText(e.target.value)}\n            autoFocus={editMode}\n            onBlur={onCancel}\n            onKeyDown={onKeyDown}\n          />\n          <div className=\"edit-text-actions\">\n            <div className=\"edit-text-actions-accept edit-text-action\" onClick={onAccept}>&#9745;</div>\n            <div className=\"edit-text-actions-cancel edit-text-action\" onClick={onCancel}>x</div>\n\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","import React from 'react';\nimport './Step.css'\nimport { AppContext } from '../../../../context/TodoContext';\nimport { EditText } from '../../../../components/EditText';\n\n\nexport const Step = React.memo(({step, taskId}) => {\n    const { editStep, removeStep } = React.useContext(AppContext);\n\n    const onUpdateStep = (name, value) => {\n        editStep(taskId, step.id, name, value);\n    }\n\n    const onRemoveStep = () => removeStep(taskId, step.id)\n\n    return (\n        <div className='step'>\n            <EditText\n              value={step.name} \n              onComplete={(value) => onUpdateStep('name', value)} \n              className={`step-text ${step.completed ? 'complete' : ''}`}\n            />\n            <div className=\"step-check\">\n                <input\n                    type=\"checkbox\"\n                    onChange={() => onUpdateStep('completed', !step.completed)}\n                    checked={step.completed}\n                />\n            </div>\n            <div className=\"remove-step\" onClick={onRemoveStep}>x</div>\n        </div>\n    )\n})","export const uuid = () => {\n    var dt = new Date().getTime();\n    return 'xxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (dt + Math.random()*16)%16 | 0;\n        dt = Math.floor(dt/16);\n        return (c=='x' ? r :(r&0x3|0x8)).toString(16);\n    });\n}","import React from 'react';\nimport './Task.css';\nimport { Arrow } from '../../../../components/icons/arrows';\nimport { TextBlock } from '../../../../components/TextBlock/TextBlock';\nimport { Text } from '../../../../components/Text/Text';\nimport { Input } from '../../../../components/Form/Input';\nimport { Button } from '../../../../components/Button/Button';\nimport { Step } from '../Step/Step';\nimport { uuid } from '../../../../utils';\nimport { AppContext } from '../../../../context/TodoContext';\nimport { EditText } from '../../../../components/EditText';\n\nconst Task = ({task, }) => {\n  const [showSteps, setShowSteps] = React.useState(false);\n  const [newStep, setNewStep] = React.useState('');\n  const {\n    removeTask,\n    onAddStep,\n    editTask,\n  } = React.useContext(AppContext);\n\n  const completedNumberSteps = React.useMemo(() => {\n    return task.steps.filter(step => step.completed).length || 0;\n  }, [task])\n\n  const handleCheckTask = () => {\n    editTask(task.id, 'completed', !task.completed)\n  }\n\n  const addStep = () => {\n    if(newStep.length < 3) return\n    const data = {\n      id: uuid(),\n      name: newStep,\n      completed: false\n    }\n    onAddStep(task.id, data);\n    setNewStep('')\n  }\n\n  const onRemove = () => {\n    removeTask(task.id)\n  }\n\n  return (\n    <div className=\"task\">\n      <div className={`task-container ${task.completed && 'completed'}`}>\n        <div style={{marginRight: 16}}>\n          <Arrow\n            direction={showSteps ? 'up' : 'down'}\n            pointer\n            onClickArrow={() => {\n              setShowSteps((show) => setShowSteps(!show));\n            }}\n          />\n        </div>\n\n        <EditText\n          value={task.name}\n          className={'task-text'}\n          onComplete={(text) => editTask(task.id, 'name', text)}\n        />\n        <div className='completed-text'>{completedNumberSteps} / {task.steps.length}</div>\n        <div className=\"task-check\">\n          <input type=\"checkbox\" checked={task.completed} onChange={handleCheckTask}/>\n        </div> \n      </div>\n      { showSteps &&\n        <div className=\"step-wrapper\">\n          { task.steps.length\n            ? task.steps.map((step) => (\n              <Step\n                step={step}\n                key={step.id}\n                taskId={task.id}\n              />\n            ))\n            : <Text text={'No existen pasos'} gray center/>\n          }\n          <div style={{position: 'relative'}}>\n            <Input\n              placeholder=\"Agregar nuevo paso\"\n              value={newStep}\n              onChange={(value) => setNewStep(value)}\n              onEnterPressed={addStep}\n            />\n            <div className='check-mark' onClick={addStep}>&#9745;</div>\n          </div>\n          <div className='description-block'>\n            <Text text={'Descripción:'} type={`sub-sub-title`}/>\n            <TextBlock text={task.description}/>\n          </div>\n          <Button onClick={onRemove} danger value={'Eliminar Tarea'} />\n        </div>\n      }\n      \n    </div>\n  )\n};\n\nexport { Task };","import React from 'react';\nimport './TextArea.css'\n\nexport const TextArea = ({value, onChange, placeholder, fullWidth}) => {\n  const handleChange = (event) => {\n    if(onChange) onChange(event.target.value);\n  }\n\n\n  return (\n    <div className={`textarea-container ${fullWidth ? 'full-width' : ''}`}>\n      <textarea\n        rows={5}\n        className='textarea-text'\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={handleChange}\n      />\n    </div>  \n  )\n}","import React from 'react';\nimport {uuid} from '../../../../utils'\nimport './AddTask.css';\nimport { Input } from '../../../../components/Form/Input';\nimport { TextArea } from '../../../../components/Form/TextArea';\nimport { Text } from '../../../../components/Text/Text';\nimport { Button } from '../../../../components/Button/Button';\n\nexport const AddTask = ({onCancel, onAddTask}) => {\n    const [data, setData] = React.useState({name: '', description: ''})\n    const handleOnAccept = () => {\n        console.log(`handleOnAccept`, data)\n        onAddTask({\n            ...data,\n            id: uuid(),\n            completed: false,\n            steps: []\n        });\n        setData({name: '', description: ''})\n    }\n    return (\n        <div className='add-task-container'>\n            <Text type={'sub-title'} text={'Nueva Tarea'}/>\n            <Input\n                placeholder={'Nueva Tarea'}\n                value={data.name}\n                onChange={(value) => setData({...data, name: value})}\n            />\n            <TextArea\n                placeholder={'descripción nueva tarea'}\n                value={data.description}\n                onChange={(value) => setData({...data, description: value})}\n            />\n            <div className='add-task-button-container'>\n                <Button\n                    value=\"Cancelar\"\n                    danger\n                    onClick={onCancel}\n                />\n                <Button\n                    value=\"Aceptar\"\n                    onClick={handleOnAccept}\n                />\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './Modal.css'\n\nexport const Modal = ({isOpen, onClose, children}) => {\n    if(!isOpen) return <></>;\n\n    return(\n        <>\n            <div className='modal-background' onClick={onClose}></div>\n            <div className='modal-box'>\n                <div className='modal-container'>\n                    <div className='modal-close' onClick={onClose}>x</div>\n                    {children}\n                </div>\n            </div>\n        </>\n    )\n}","import React from 'react';\nimport { Task } from './components/Task/Task';\nimport { AddTask } from './components/AddTask/AddTask';\nimport { Modal } from '../../components/Modal/Modal';\nimport { Button } from '../../components/Button/Button';\nimport { Text } from '../../components/Text/Text';\nimport { Input } from '../../components/Form/Input';\nimport { AppContext } from '../../context/TodoContext';\n\nexport const ToDoList = () => {\n    const {\n        todoData,\n        tasks,\n        tasksCompleted,\n        addTask,\n        searchText,\n        setSearchText,\n        isModalAddTaskOpen,\n        setIsModalAddTaskOpen\n    } = React.useContext(AppContext)\n\n    const renderTasks = (task) => <Task task={task} key={task.id} />\n\n    return (<>\n        <Input value={searchText} onChange={text => setSearchText(text) } placeholder={'Buscar'}/>\n        \n        <Text gray text={`Total Tareas: ${todoData.length} - Por hacer: ${tasks.length}  - Completadas: ${tasksCompleted.length}`} />\n        {tasks.length > 0 \n            ? tasks.map(renderTasks)\n            : <Text text=\"No tiene tareas\" gray/>\n        }\n        {tasksCompleted.length > 0 \n            ? tasksCompleted.map(renderTasks)\n            : <Text text=\"No tiene tareas completadas\" gray/>\n        }\n\n        <div style={{marginTop: 16}}>\n            <Button\n                value=\"+ Agregar Tarea\"\n                onClick={() => setIsModalAddTaskOpen(true)}\n            />\n        </div>\n\n        <Modal\n            isOpen={isModalAddTaskOpen}\n            onClose={() => setIsModalAddTaskOpen(false)}\n        >\n            <AddTask\n                onAddTask={addTask}\n                onCancel={() => setIsModalAddTaskOpen(false)}\n            />\n        </Modal>\n    </>)\n}","import React from 'react';\nimport './App.css';\nimport { ToDoList } from './modules/ToDo';\nimport { Text } from './components/Text/Text';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <div>\n        <Text text={'To Do List Project'} type=\"title\"/>\n      </div>\n      <div>\n        <ToDoList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { TodoContext } from './context/TodoContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContext>\n      <App />\n    </TodoContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}